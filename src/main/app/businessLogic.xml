<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:sap="http://www.mulesoft.org/schema/mule/sap" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	version="EE-3.5.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sap http://www.mulesoft.org/schema/mule/sap/current/mule-sap.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <data-mapper:config name="Opportunity_to_BAPI_SALESORDER_CREATEFROMDAT2" transformationGraphPath="opportunity_to_bapi_salesorder_createfromdat2.grf" doc:name="Opportunity_to_BAPI_SALESORDER_CREATEFROMDAT2"/>
    <data-mapper:config name="BAPI_SALESORDER_GETLIST_to_Sales_Order" transformationGraphPath="bapi_salesorder_getlist_to_sales_order.grf" doc:name="BAPI_SALESORDER_GETLIST_to_Sales_Order"/>
    <data-mapper:config name="Opportunity_to_BAPI_SALESORDER_CHANGE" transformationGraphPath="opportunity_to_bapi_salesorder_change.grf" doc:name="Opportunity_to_BAPI_SALESORDER_CHANGE"/>
    <data-mapper:config name="BAPI_CUSTOMER_FIND_to_Customer" transformationGraphPath="bapi_customer_find_to_customer.grf" doc:name="BAPI_CUSTOMER_FIND_to_Customer"/>
    <data-mapper:config name="BAPI_ISAORDER_GETDETAILEDLIST_to_Sales_Order" transformationGraphPath="bapi_isaorder_getdetailedlist_to_sales_order.grf" doc:name="BAPI_ISAORDER_GETDETAILEDLIST_to_Sales_Order"/>
	<batch:job name="syncOpportunitiesBatch">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:process-records>
			<batch:step name="foreachOpportunityInSalesforceGetsalesorderInSapStep">
                <enricher source="#[payload is NullPayload ? null : payload['Id']]" target="#[payload['SALESDOCUMENT']]" doc:name="Message Enricher">
                    <processor-chain doc:name="Processor Chain">
                        <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_SALESORDER_GETLIST" xmlVersion="2" outputXml="true" responseTimeout="10000" doc:name="SAP">
                            <sap:definition><![CDATA[<jco>
	<import>
		<field name="PURCHASE_ORDER_NUMBER">#[payload['Id']]</field>
	</import>
</jco>]]></sap:definition>
                        </sap:outbound-endpoint>
                        <data-mapper:transform config-ref="BAPI_SALESORDER_GETLIST_to_Sales_Order" doc:name="BAPI_SALESORDER_GETLIST to Sales Order"/>
                    </processor-chain>
                </enricher>
                <choice doc:name="Choice">
                    <when expression="#[payload['SALESDOCUMENT'] != null]">
                        <enricher source="#[payload]" target="#[payload['salesOrderInSap']]" doc:name="store result in record var 'salesorderInSap'">
                            <processor-chain doc:name="Processor Chain">
                                <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_ISAORDER_GETDETAILEDLIST" xmlVersion="2" outputXml="true" responseTimeout="10000" doc:name="SAP BAPI_ISAORDER_GETDETAILEDLIST" evaluateFunctionResponse="true">
                                    <sap:definition><![CDATA[<jco>
	<import>
		<structure name="I_BAPI_VIEW">
			<field name="ITEM">X</field>
			<field name="SDCOND">X</field>
		</structure>
	</import>
	<tables>
		<table name="SALES_DOCUMENTS">
			<row>
				<field name="VBELN">#[payload['SALESDOCUMENT']]</field>
			</row>
		</table>
	</tables>
</jco>]]></sap:definition>
                                </sap:outbound-endpoint>
                                <data-mapper:transform config-ref="BAPI_ISAORDER_GETDETAILEDLIST_to_Sales_Order" doc:name="BAPI_ISAORDER_GETDETAILEDLIST to Sales Order"/>
                                <logger message="#[payload]" level="INFO" category="VYCUC" doc:name="Logger"/>
                            </processor-chain>
                        </enricher>
                    </when>
                    <otherwise>
                        <expression-component doc:name="Expression"><![CDATA[payload['salesOrderInSap'] = NullPayload.getInstance();]]></expression-component>
                    </otherwise>
                </choice>
			</batch:step>
			 <batch:step name="findOrCreateSalesOrderInSapSetp" accept-expression="'syncAccount' == '${account.sync.policy}'">
                <enricher source="#[payload]" target="#[payload['customerInSap']]" doc:name="store result in salesOrderInSap">
                    <processor-chain doc:name="Processor Chain">
                        <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_CUSTOMER_FIND" xmlVersion="2" outputXml="true" evaluateFunctionResponse="true" responseTimeout="10000" doc:name="Get Customer by Name">
                            <sap:definition><![CDATA[<jco>
	<import>
		<field name="MAX_CNT">0</field>
		<field name="PL_HOLD">X</field>
	</import>
  	<tables>
		<table name="SELOPT_TAB">
			<row id="0">
				<field name="TABNAME">KNA1</field>
				<field name="FIELDNAME">NAME1</field>
				<field name="FIELDVALUE">#[org.apache.commons.lang3.StringEscapeUtils.escapeXml(payload['Name'])]</field>
			</row>
		</table>
	</tables>
</jco>
]]></sap:definition>
                        </sap:outbound-endpoint>
                        <data-mapper:transform config-ref="BAPI_CUSTOMER_FIND_to_Customer" doc:name="BAPI_CUSTOMER_FIND to Customer"/>
                    </processor-chain>
                </enricher>
                <choice doc:name="Choice">
                    <when expression="#[payload['salesOrderInSap'] is NullPayload]">
                        <enricher doc:name="store result in accountId" target="#[recordVars['accountId']]">
	                        <processor-chain doc:name="Processor Chain">
                                <expression-component doc:name="remove unnecessary fields"><![CDATA[payload['Account'].remove('Id');
payload['Account'].put('NumberOfEmployees', payload['Account']['NumberOfEmployees'] == null ? 0 :  Integer.parseInt(payload['Account']['NumberOfEmployees']));]]></expression-component>
                                <set-payload value="#[ [payload['Account']]]" doc:name="Set Payload"/>
                                <sap:outbound-endpoint exchange-pattern="request-response" type="function" xmlVersion="2" outputXml="true" responseTimeout="10000" doc:name="SAP"/>
                                <expression-transformer expression="#[payload[0].getId()]" doc:name="get new account id"/>
	                        </processor-chain>
                        </enricher>
                    </when>
                    <otherwise>
                        <enricher target="#[recordVars['accountId']]" doc:name="store result in accountId">
     	                   <expression-transformer expression="#[payload['customerInSap']['Id']]" doc:name="get new account id"/>
                        </enricher>
                    </otherwise>
                </choice>
                <expression-component doc:name="set Account ID"><![CDATA[payload.put('AccountId', recordVars['accountId']);]]></expression-component>
            </batch:step>
            <batch:step name="setDummyAccountIdStep" accept-expression="'assignDummyAccount' == '${account.sync.policy}'">
                <expression-component doc:name="set Account ID"><![CDATA[payload.put('AccountId', '${account.id.in.b}');]]></expression-component>
            </batch:step>
			<batch:step name="foreachOpportunityInSalesforceInsertSalesOrderInSapStep" accept-expression="payload['salesOrderInSap'] is NullPayload">
                <logger message="Opportunities to create: #[payload]" level="INFO" doc:name="log Opportunities to create"/>
                <expression-component doc:name="Expression"><![CDATA[payload['CloseDate'] = payload['CloseDate'].replace("-", "");
num = 0;
for (record : payload['OpportunityLineItems']['records']) {
	num += 10;
	record['ITM_NUMBER'] =Integer.toString(num);
}]]></expression-component>
                <data-mapper:transform config-ref="Opportunity_to_BAPI_SALESORDER_CREATEFROMDAT2" doc:name="Opportunity to BAPI_SALESORDER_CREATEFROMDAT2"/>
                <sap:outbound-endpoint connector-ref="SAP" type="function" functionName="BAPI_SALESORDER_CREATEFROMDAT2" xmlVersion="2" outputXml="true" responseTimeout="10000" doc:name="SAP BAPI_SALESORDER_CREATEFROMDAT2" bapiTransaction="true" exchange-pattern="request-response" evaluateFunctionResponse="true"/>
                <byte-array-to-string-transformer doc:name="Byte Array to String"/>
                <logger message="Insert result: #[payload]" level="INFO" doc:name="log Result"/>
			</batch:step>
            <batch:step name="foreachOpportunityInSalesforceUpdatesalesorderInSapStep" accept-expression="!(payload['salesOrderInSap'] is NullPayload)">
                <expression-component doc:name="Expression"><![CDATA[payload['CloseDate'] = payload['CloseDate'].replace("-", "");
int max = 0;
for (item : payload['salesOrderInSap']['Items']) {
	max = Math.max(max, Integer.parseInt(item['ITM_NUMBER']));
}
for (record : payload['OpportunityLineItems']['records']) {
	max += 10;
	record['ITM_NUMBER'] =Integer.toString(max);
}]]></expression-component>
                <logger message="Opportunities to update: #[payload]" level="INFO" doc:name="Opportunities to update"/>
                <data-mapper:transform config-ref="Opportunity_to_BAPI_SALESORDER_CHANGE" doc:name="Opportunity to BAPI_SALESORDER_CHANGE"/>
                <sap:xml-to-function xmlVersion="2" doc:name="XML to SAP Function (BAPI)"/>
                <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_SALESORDER_CHANGE" xmlVersion="2" outputXml="true" bapiTransaction="true" responseTimeout="10000" doc:name="SAP BAPI_SALESORDER_CHANGE" evaluateFunctionResponse="true"/>
                <logger message="Update result: #[payload]" level="INFO" doc:name="log Result"/>
            </batch:step>
		</batch:process-records>
		<batch:on-complete>
			<json:object-to-json-transformer
				doc:name="transform BatchJobInstance to JSON" />
			<logger level="INFO" doc:name="log 'Migration process has finished'"
				message="Migration process has finished: #[payload]" />
		</batch:on-complete>
	</batch:job>

</mule>
